#!/usr/bin/env bash

set -euo pipefail

basedir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"

get_ecr_url() {
  local repository_name="$1"
  aws ecr describe-repositories \
    --repository-names "${repository_name}" \
    --output text \
    --query 'repositories[0].repositoryUri'
}

ecr_exists() {
  local repository_name="$1"
  aws ecr describe-repositories \
    --repository-names "${repository_name}" \
    --output text \
    --query 'repositories[0].registryId'
}

upsert_ecr() {
  local repository_name="$1"
  if ! ecr_exists "${repository_name}"; then
    aws ecr create-repository --repository-name "${repository_name}"
  fi

	echo 'Setting ECR Lifecycle policy'
  aws ecr put-lifecycle-policy \
    --repository-name "${repository_name}" \
    --lifecycle-policy-text "file://$basedir/policies/ecr-lifecycle-policy.json"

	policy_file="${BUILDKITE_PLUGIN_CREATE_ECR_POLICY:-''}"
	echo "Policy file: ${policy_file}"
  if [ -z ${policy_file} ]; then
		echo 'Setting ECR permissoins'
    aws ecr set-repository-policy \
      --repository-name "${repository_name}" \
      --policy-text "file://${policy_file}"
  fi
}

env
$(aws ecr get-login --no-include-email)
# FIX ME
default_repository_name="build-cache/${BUILDKITE_ORGANIZATION_SLUG}/${BUILDKITE_PIPELINE_SLUG}"
repository_name="${BUILDKITE_PLUGIN_CREATE_ECR_NAME:-${default_repository_name}}"
upsert_ecr "${repository_name}"
